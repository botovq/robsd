#!/bin/ksh

set -eu

usage() {
	xargs 1>&2 <<-EOF
	usage: robsd
	[-d]
	[-S src-diff]
	[-X xenocara-diff]
	[-c comment]
	[-r path]
	[-s step]
	[-t tag]
	EOF
	exit 1
}

. "${EXECDIR:-/usr/local/libexec/robsd}/util.sh"

setmode "robsd"
setprogname "robsd"
[ "$(id -u)" -ne 0 ] && fatal "must be run as root"

config_load <<'EOF'
ROBSDDIR="${robsddir}"
KEEP="${keep}"
SKIP="${skip}"
BSDDIFF="${bsd-diff}"
BSDSRCDIR="${bsd-srcdir}"
XDIFF="${x11-diff}"
XSRCDIR="${x11-srcdir}"
EOF

_comment=""
_statpid=""
_step=1
_tags=""

while getopts "dS:X:c:r:s:t:" opt; do
	case "$opt" in
	d)	DETACH=0;;
	S)	BSDDIFF="${BSDDIFF} $(readlink -f "${OPTARG}")";;
	X)	XDIFF="${XDIFF} $(readlink -f "${OPTARG}")";;
	c)	_comment="$OPTARG";;
	r)	BUILDDIR="$(readlink -f "$OPTARG")";;
	s)	SKIP="${SKIP}${SKIP:+ }${OPTARG}";;
	t)	_tags="${_tags}${_tags:+ }${OPTARG}";;
	*)	usage;;
	esac
done
shift $((OPTIND - 1))
[ $# -ne 0 ] && usage

trap 'trap_exit -r "$ROBSDDIR" -b "$BUILDDIR" -s "$_statpid"' EXIT

if [ -z "$BUILDDIR" ]; then
	check_perf || exit 1

	BUILDDIR="${ROBSDDIR}/$(build_id "$ROBSDDIR")"
else
	_step="$(step_next "$(step_path "$BUILDDIR")")"
fi
build_init "$BUILDDIR"
info "using directory ${BUILDDIR} at step ${_step}"

lock_acquire "$ROBSDDIR" "$BUILDDIR" || exit 1

if [ "$_step" -eq 1 ]; then
	if [ -n "$_comment" ]; then
		cat "$_comment" >"${BUILDDIR}/comment"
	elif [ -n "$BSDDIFF" ] || [ -n "$XDIFF" ]; then
		# Generate comment including a list of the diff(s).
		{
			echo 'Applied the following diff(s):'
			echo "$BSDDIFF" "$XDIFF" | xargs ls
		} >"${BUILDDIR}/comment"
	fi

	# shellcheck disable=SC2086
	diff_copy -d "$BSDSRCDIR" "${BUILDDIR}/src.diff" $BSDDIFF
	# shellcheck disable=SC2086
	diff_copy -d "$XSRCDIR" "${BUILDDIR}/xenocara.diff" $XDIFF

	if [ -n "$SKIP" ]; then
		info "skipping steps: ${SKIP}"
		for _skip in $SKIP; do
			_id="$(step_id "$_skip")"
			step_end -S -t "$(date +%s)" -n "$_skip" -s "$_id" \
				"$(step_path "$BUILDDIR")"
		done
	fi

	if [ -n "$_tags" ]; then
		echo "$_tags" >"${BUILDDIR}/tags"
	fi

	"$ROBSDSTAT" -H >"${BUILDDIR}/stat.csv"
fi

if [ "$KEEP" -gt 0 ]; then
	/usr/local/sbin/robsd-clean "$KEEP"
fi

"$ROBSDSTAT" -u build >>"${BUILDDIR}/stat.csv" &
_statpid="$!"

if [ "$DETACH" -eq 1 ]; then
	# Signal to info() that no further output should be written to robsd.log
	# as we're about redirect all output to the same log.
	DETACH=2
	exec </dev/null >>"${BUILDDIR}/robsd.log" 2>&1

	# Reinstall trap handler since they are not inherited by subprocesses.
	trap '-' EXIT
	{
		trap 'trap_exit -r "$ROBSDDIR" -b "$BUILDDIR" -s "${_statpid}"' EXIT
		robsd "$_step"
	} &
	info "running in detach mode as pid ${!}"
else
	info "running as pid ${$}"
	robsd "$_step"
fi
